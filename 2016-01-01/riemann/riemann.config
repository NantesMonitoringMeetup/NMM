; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init)

(let [logger (org.apache.log4j.Logger/getRootLogger)
      netty  (org.apache.log4j.Logger/getLogger "netty")
      rie  (org.apache.log4j.Logger/getLogger "riemann")]
  (.setLevel logger  org.apache.log4j.Level/DEBUG)
  (.setLevel netty  org.apache.log4j.Level/DEBUG)
  (.setLevel rie  org.apache.log4j.Level/DEBUG))


; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server :host host)
  (udp-server :host host)
  (ws-server  :host host))

; Expire old events from the index every 5 seconds.
(periodically-expire 50)

; Keep events in the index for 5 minutes by default.
(let [index (default :ttl 300 (update-index (index)))]

  (streams

   (where (service "myservice")
          #(info %))
   
                                        ; Index all events immediately.
   index
   
                                        ; Calculate an overall rate of events.
   (with {:metric 1 :host nil :state "ok" :service "events/sec"}
         (rate 5 index))
   
                                        ; Log expired events.
   (expired
    (fn [event] (info "expired" event)))))
